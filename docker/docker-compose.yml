version: '3'

services:
  zk:
    container_name: zk
    image: confluentinc/cp-zookeeper:5.1.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zk_secrets:/etc/zookeeper/secrets
      - zk_data:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.1.0
    ports:
      - '9093:9093'
    depends_on:
      - zk
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.consumer.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: consumer_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.consumer.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: consumer_sslkey_creds
      KAFKA_SSL_KEY_CREDENTIALS: consumer_sslkey_creds
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./kafka_secrets:/etc/kafka/secrets

  graphite:
    container_name: graphite
    image: graphiteapp/graphite-statsd:1.1.3
    ports:
      - '2003-2004:2003-2004'
      - '2023-2024:2023-2024'
      - '8125:8125/udp'
      - '8126:8126'
      - '8082:80'
    volumes:
      - graphite_conf:/opt/graphite/conf
      - graphite_data:/opt/graphite/storage
      - statsd_data:/opt/statsd

  frontend:
    container_name: frontend
    image: allegro/hermes-frontend
    ports:
      - "8080:8080"
    depends_on:
      - zk
      - kafka
      - graphite
    volumes:
      - ./kafka_secrets:/kafka_secrets

  consumers:
    container_name: consumers
    image: allegro/hermes-consumers
    depends_on:
      - zk
      - kafka
      - graphite
    volumes:
      - ./kafka_secrets:/kafka_secrets

  management:
    container_name: management
    image: allegro/hermes-management
    ports:
      - "8090:8090"
    depends_on:
      - zk
      - kafka
      - graphite
    volumes:
      - ./kafka_secrets:/kafka_secrets

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.1.0
    depends_on:
      - zk
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zk:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "SSL://kafka:9093"
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /kafka_secrets/kafka.consumer.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /kafka_secrets/kafka.consumer.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: password
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
    ports:
      - "8081:8081"
    volumes:
      - ./kafka_secrets:/kafka_secrets


  # This "container" is a workaround to test pre-created topics
  kafka-setup:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
      - schema-registry
    volumes:
      - ./kafka_secrets:/etc/kafka/secrets
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9093 -s SSL -c /etc/kafka/secrets/kafka.config 1 30 && \
                       kafka-topics --create --if-not-exists --zookeeper zk:2181 --partitions 4 --replication-factor 1 --topic testGroup.testTopic'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

volumes:
  graphite_conf:
  graphite_data:
  statsd_data:
  zk_secrets:
  zk_data:
  zk_log:
  kafka_data:




